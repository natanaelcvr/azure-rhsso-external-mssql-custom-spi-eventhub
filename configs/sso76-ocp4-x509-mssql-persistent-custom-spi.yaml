---
kind: Template
apiVersion: template.openshift.io/v1
metadata:
  annotations:
    iconClass: icon-sso
    tags: sso,keycloak,jboss
    version: 7.6-2.GA
    openshift.io/display-name: Red Hat Single Sign-On 7.6 on OpenJDK + External MS SQL (Persistent)
    openshift.io/provider-display-name: Red Hat, Inc.
    description: >-
      An example application based on RH-SSO 7.6 on OpenJDK image. For more
      information about using this template, see
      https://github.com/jboss-container-images/redhat-sso-7-openshift-image/tree/sso76-dev/docs.
    template.openshift.io/long-description: >-
      This template defines resources needed to develop Red Hat Single Sign-On
      7.6 on OpenJDK server based deployment, deployment configuration for
      MSSQL using persistence, and securing RH-SSO communication using
      re-encrypt TLS.
    template.openshift.io/documentation-url: https://access.redhat.com/documentation/en/red-hat-single-sign-on/
    template.openshift.io/support-url: https://access.redhat.com
  name: sso76-x509-external-mssql-persistent
labels:
  template: sso76-x509-external-mssql-persistent
  rhsso: 7.6-2.GA
message: >-
  A new persistent RH-SSO service (using MS SQL) has been created in your
  project. The admin username/password for accessing the master realm via the
  RH-SSO console is ${SSO_ADMIN_USERNAME}/${SSO_ADMIN_PASSWORD}. The
  username/password for accessing the MSSQL database "${DB_DATABASE}" is
  ${DB_USERNAME}/${DB_PASSWORD}. The HTTPS keystore used for serving secure
  content, the JGroups keystore used for securing JGroups communications, and
  server truststore used for securing RH-SSO requests were automatically created
  via OpenShift's service serving x509 certificate secrets.
parameters:
  - displayName: Application Name
    description: The name for the application.
    name: APPLICATION_NAME
    value: sso
    required: true
  - displayName: Custom RH-SSO Server Hostname
    description: Custom hostname for the RH-SSO server.
    name: SSO_HOSTNAME
    value: ''
    required: false
  - displayName: JGroups Cluster Password
    description: The password for the JGroups cluster.
    name: JGROUPS_CLUSTER_PASSWORD
    from: '[a-zA-Z0-9]{32}'
    generate: expression
    required: true
  - displayName: ImageStream Namespace
    description: >-
      Namespace in which the ImageStreams for Red Hat Middleware images are
      installed. These ImageStreams are normally installed in the openshift
      namespace. You should only need to modify this if you've installed the
      ImageStreams in a different namespace/project.
    name: IMAGE_STREAM_NAMESPACE
    value: openshift
    required: true
  - displayName: RH-SSO Administrator Username
    description: RH-SSO Server administrator username
    name: SSO_ADMIN_USERNAME
    from: '[a-zA-Z0-9]{8}'
    generate: expression
    required: true
  - displayName: RH-SSO Administrator Password
    description: RH-SSO Server administrator password
    name: SSO_ADMIN_PASSWORD
    from: '[a-zA-Z0-9]{32}'
    generate: expression
    required: true
  - displayName: RH-SSO Realm
    description: Realm to be created in the RH-SSO server (e.g. demorealm).
    name: SSO_REALM
    value: ''
    required: false
  - displayName: RH-SSO Service Username
    description: >-
      The username used to access the RH-SSO service. This is used by clients to
      create the appliction client(s) within the specified RH-SSO realm.
    name: SSO_SERVICE_USERNAME
    value: ''
    required: false
  - displayName: RH-SSO Service Password
    description: The password for the RH-SSO service user.
    name: SSO_SERVICE_PASSWORD
    value: ''
    required: false
  - displayName: Container Memory Limit
    description: Container memory limit.
    name: MEMORY_LIMIT
    value: 1Gi
    required: false
# Begin Custom Parameters
  - displayName: Maven Mirror URL
    description: The base URL of a mirror used for retrieving artifacts.
    name: MAVEN_MIRROR_URL
    required: true
  - displayName: Git URL with the SPI project
    description: The base URL of a git repository with SPI project.
    name: GIT_SPI_URL
    required: true
  - displayName: Git Context Directory
    description: The git context directory with SPI project.
    name: GIT_SPI_CONTEXT_DIR
    value: ./
    required: false
  - displayName: Git Branch
    description: The git branch with SPI project.
    name: GIT_SPI_BRANCH
    value: master
    required: false
  - displayName: Azure Event Hub Connection String
    description: Connection string to connect to a Azure Event Hub. More Info > https://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-create
    name: AZURE_EVENT_HUB_CONNECTION_STRING
    required: false
  - displayName: Azure Event Hub Name
    description: Name of the event hub where the events will be sent. More Info > https://docs.microsoft.com/en-us/azure/event-hubs/event-hubs-create
    name: AZURE_EVENT_HUB_NAME
    required: false
  - displayName: Azure Event Hub Admin Name
    description: >-
      OPTIONAL: Name of the admin event hub where the admin events will be sent. 
      If not provided, the value of AZURE_EVENT_HUB_NAME will be used instead.
    name: AZURE_EVENT_HUB_ADMIN_NAME
    required: false
  - displayName: MSSQL driver name
    description: >-
      Driver name to be used
    name: MSSQL_DRIVER
    value: "mssql"
    required: false
  - displayName: MSSQL database name that will be creates and used by RHSSO
    description: >-
      Driver class to be used
    name: MSSQL_DATABASE
    value: "RH_SSO"
    required: false
  - displayName: Database Username
    description: Database user name
    name: MSSQL_USERNAME
    from: aA1[a-zA-Z0-9]{3}
    generate: expression
    required: false
  - displayName: Database Password
    description: Database user password
    name: MSSQL_PASSWORD
    from: 'aA1[a-zA-Z0-9]{8}'
    generate: expression
    required: false
  - displayName: Database URL
    description: Database connection URL
    name: MSSQL_URL
    required: true
# End Custom Parameters
objects:
# Begin New Object
  - kind: BuildConfig
    apiVersion: v1
    metadata:
      name: ${APPLICATION_NAME}-custom
    spec:
      runPolicy: Serial
      source: 
        type: Git
        git:
          uri: ${GIT_SPI_URL}
          ref: ${GIT_SPI_BRANCH}
        contextDir: ${GIT_SPI_CONTEXT_DIR}
      strategy: 
        dockerStrategy:
          dockerfilePath: ./Containerfile
          buildArgs:
            - name: MAVEN_MIRROR_URL
              value: ${MAVEN_MIRROR_URL}
      output: 
        to:
          kind: ImageStreamTag
          name: sso76-openshift-rhel8-custom:7.6
      triggers:
      - imageChange: {}
        type: ImageChange
      - type: ConfigChange
# End New Object
# Begin New Object
  - kind: ImageStream
    apiVersion: v1
    metadata:
      name: sso76-openshift-rhel8-custom
# End New Object
  - kind: ConfigMap
    apiVersion: v1
    metadata:
      annotations:
        description: ConfigMap providing service ca bundle.
        service.beta.openshift.io/inject-cabundle: 'true'
      labels:
        application: ${APPLICATION_NAME}
      name: ${APPLICATION_NAME}-service-ca
  - kind: Service
    apiVersion: v1
    spec:
      ports:
        - port: 8443
          targetPort: 8443
      selector:
        deploymentConfig: ${APPLICATION_NAME}
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        application: ${APPLICATION_NAME}
      annotations:
        description: The web server's https port.
        service.alpha.openshift.io/serving-cert-secret-name: sso-x509-https-secret
        service.alpha.openshift.io/dependencies: '[{"name": "${APPLICATION_NAME}-mssql", "kind": "Service"}]'
  - kind: Service
    apiVersion: v1
    spec:
      clusterIP: None
      ports:
        - name: ping
          port: 8888
      publishNotReadyAddresses: true
      selector:
        deploymentConfig: ${APPLICATION_NAME}
    metadata:
      name: ${APPLICATION_NAME}-ping
      labels:
        application: ${APPLICATION_NAME}
      annotations:
        service.alpha.openshift.io/serving-cert-secret-name: sso-x509-jgroups-secret
        description: The JGroups ping port for clustering.
  - kind: Route
    apiVersion: route.openshift.io/v1
    id: ${APPLICATION_NAME}-https
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        application: ${APPLICATION_NAME}
      annotations:
        description: Route for application's https service.
    spec:
      to:
        name: ${APPLICATION_NAME}
      tls:
        termination: reencrypt
  - kind: Secret
    apiVersion: v1
    stringData:
      MSSQL_PASSWORD: "${MSSQL_PASSWORD}"
      MSSQL_USERNAME: "${MSSQL_USERNAME}"
      MSSQL_DRIVER: "${MSSQL_DRIVER}"
      MSSQL_DATABASE: "${MSSQL_DATABASE}"
      MSSQL_URL: "${MSSQL_URL}"
    metadata:
      name: "${APPLICATION_NAME}-secret"
  - kind: DeploymentConfig
    apiVersion: apps.openshift.io/v1
    metadata:
      name: ${APPLICATION_NAME}
      labels:
        application: ${APPLICATION_NAME}
    spec:
      strategy:
        type: Recreate
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - ${APPLICATION_NAME}
            from:
              kind: ImageStreamTag
              name: sso76-openshift-rhel8-custom:7.6
        - type: ConfigChange
      replicas: 1
      selector:
        deploymentConfig: ${APPLICATION_NAME}
      template:
        metadata:
          name: ${APPLICATION_NAME}
          labels:
            deploymentConfig: ${APPLICATION_NAME}
            application: ${APPLICATION_NAME}
        spec:
          terminationGracePeriodSeconds: 76
          containers:
            - name: ${APPLICATION_NAME}
              image: ${APPLICATION_NAME}
              imagePullPolicy: Always
              resources:
                limits:
                  memory: ${MEMORY_LIMIT}
              volumeMounts:
                - name: sso-x509-https-volume
                  mountPath: /etc/x509/https
                  readOnly: true
                - name: sso-x509-jgroups-volume
                  mountPath: /etc/x509/jgroups
                  readOnly: true
                - mountPath: /var/run/configmaps/service-ca
                  name: service-ca
                  readOnly: true
              livenessProbe:
                exec:
                  command:
                    - /bin/bash
                    - '-c'
                    - /opt/eap/bin/livenessProbe.sh
                initialDelaySeconds: 60
              readinessProbe:
                exec:
                  command:
                    - /bin/bash
                    - '-c'
                    - /opt/eap/bin/readinessProbe.sh
              ports:
                - name: jolokia
                  containerPort: 8778
                  protocol: TCP
                - name: http
                  containerPort: 8080
                  protocol: TCP
                - name: https
                  containerPort: 8443
                  protocol: TCP
                - name: ping
                  containerPort: 8888
                  protocol: TCP
              env:
                - name: SSO_HOSTNAME
                  value: ${SSO_HOSTNAME}
                - name: JGROUPS_PING_PROTOCOL
                  value: openshift.DNS_PING
                - name: OPENSHIFT_DNS_PING_SERVICE_NAME
                  value: ${APPLICATION_NAME}-ping
                - name: OPENSHIFT_DNS_PING_SERVICE_PORT
                  value: '8888'
                - name: X509_CA_BUNDLE
                  value: >-
                    /var/run/configmaps/service-ca/service-ca.crt
                    /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
                - name: JGROUPS_CLUSTER_PASSWORD
                  value: ${JGROUPS_CLUSTER_PASSWORD}
                - name: SSO_ADMIN_USERNAME
                  value: ${SSO_ADMIN_USERNAME}
                - name: SSO_ADMIN_PASSWORD
                  value: ${SSO_ADMIN_PASSWORD}
                - name: SSO_REALM
                  value: ${SSO_REALM}
                - name: SSO_SERVICE_USERNAME
                  value: ${SSO_SERVICE_USERNAME}
                - name: SSO_SERVICE_PASSWORD
                  value: ${SSO_SERVICE_PASSWORD}
                # Begin Custom Envs
                - name: AZURE_EVENT_HUB_CONNECTION_STRING
                  value: ${AZURE_EVENT_HUB_CONNECTION_STRING}
                - name: AZURE_EVENT_HUB_NAME
                  value: ${AZURE_EVENT_HUB_NAME}
                - name: AZURE_EVENT_HUB_ADMIN_NAME
                  value: ${AZURE_EVENT_HUB_ADMIN_NAME}
                # End Custom Envs
                # Begin Custom Datasource
                - name: DATASOURCES
                  value: 'MSSQL'
                - name: MSSQL_DATABASE
                  valueFrom:
                    secretKeyRef:
                      name: "${APPLICATION_NAME}-secret"
                      key: MSSQL_DATABASE
                - name: MSSQL_USERNAME
                  valueFrom:
                    secretKeyRef:
                      name: "${APPLICATION_NAME}-secret"
                      key: MSSQL_USERNAME
                - name: MSSQL_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: "${APPLICATION_NAME}-secret"
                      key: MSSQL_PASSWORD
                - name: MSSQL_URL
                  valueFrom:
                    secretKeyRef:
                      name: "${APPLICATION_NAME}-secret"
                      key: MSSQL_URL
                - name: MSSQL_DRIVER
                  valueFrom:
                    secretKeyRef:
                      name: "${APPLICATION_NAME}-secret"
                      key: MSSQL_DRIVER
                - name: MSSQL_JNDI
                  value: 'java:jboss/datasources/KeycloakDS'
                - name: MSSQL_NONXA
                  value: 'true'
                # End Custom Datasource
          volumes:
            - name: sso-x509-https-volume
              secret:
                secretName: sso-x509-https-secret
            - name: sso-x509-jgroups-volume
              secret:
                secretName: sso-x509-jgroups-secret
            - name: service-ca
              configMap:
                name: ${APPLICATION_NAME}-service-ca
